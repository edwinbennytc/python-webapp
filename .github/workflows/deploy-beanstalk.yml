name: Deploy to Elastic Beanstalk

on:
  workflow_run:
    workflows: ["Terraform Deployment"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push Docker image to ECR
      env:
        ECR_REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}
      run: |
        docker build -t $ECR_REPOSITORY_URI:latest .
        docker push $ECR_REPOSITORY_URI:latest

    - name: Create Dockerrun.aws.json file
      run: |
        echo '{
          "AWSEBDockerrunVersion": "1",
          "Image": {
            "Name": "866934333672.dkr.ecr.ap-southeast-2.amazonaws.com/eb/python-webapp:latest",
            "Update": "true"
          },
          "Ports": [
            {
              "ContainerPort": 5000
            }
          ]
        }' > Dockerrun.aws.json

    - name: Upload Dockerrun.aws.json to S3
      env:
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
        S3_KEY: Dockerrun.aws.json
      run: |
        aws s3 cp Dockerrun.aws.json s3://$S3_BUCKET/$S3_KEY

    - name: Create application version and update environment
      env:
        # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # AWS_REGION: ${{ secrets.AWS_REGION }}
        # ECR_REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}
        # EB_ENV_NAME: ${{ secrets.EB_ENV_NAME }}
        # EB_APP_NAME: ${{ secrets.EB_APP_NAME }}
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
        EB_ENV_NAME: "tf-eb-env"
        EB_APP_NAME: "tf-eb-app"
        S3_KEY: Dockerrun.aws.json
      run: |
        VERSION_LABEL=v$(date +%s)

        aws elasticbeanstalk create-application-version \
          --application-name $EB_APP_NAME \
          --version-label $VERSION_LABEL \
          --source-bundle S3Bucket=$S3_BUCKET,S3Key=$S3_KEY

        aws elasticbeanstalk update-environment \
          --environment-name $EB_ENV_NAME \
          --version-label $VERSION_LABEL
